<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>soundlake</title><link href="https://soundlake.net/" rel="alternate"></link><link href="https://soundlake.net/feeds/all.atom.xml" rel="self"></link><id>https://soundlake.net/</id><updated>2018-04-03T22:00:00+02:00</updated><entry><title>The Exhaustive Guide to Build Pelican Blog with Github and Travis-CI</title><link href="https://soundlake.net/posts/2018/04/02/the-exhaustive-guide-to-build-pelican-blog-with-github-and-travis-ci/" rel="alternate"></link><published>2018-04-02T10:28:00+02:00</published><updated>2018-04-02T21:51:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.net,2018-04-02:/posts/2018/04/02/the-exhaustive-guide-to-build-pelican-blog-with-github-and-travis-ci/</id><summary type="html">&lt;p&gt;A single document for the walkthrough setup your static page blog with Pelican on Github and Travis-CI.&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;I'm writing this mostly for archiving what I've done for setting up this blog.&lt;/p&gt;
&lt;p&gt;The internet is very big water, and you can whatever you want, but I couldn't
find a single document that explain everything.&lt;/p&gt;
&lt;p&gt;I know. In this software world, you can never &lt;em&gt;explain everything&lt;/em&gt;. But I
wanted a bit more kind and careful document to show me the walkthrough.&lt;/p&gt;
&lt;p&gt;The followings are the tech that I've used for setting up my new blog.&lt;/p&gt;
&lt;h3&gt;Setup in Local&lt;/h3&gt;
&lt;p&gt;Firstly, I've checked with &lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt;. There are many options, and actually
&lt;a href="https://github.com"&gt;Github&lt;/a&gt; seems easy with &lt;a href="https://jekyllrb.com"&gt;Jekyll&lt;/a&gt;, but &lt;a href="http://www.ruby-lang.org"&gt;Ruby&lt;/a&gt; is not my best thing, while
I'm a kind of fond of &lt;a href="https://www.python.org"&gt;Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To use &lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt;, you can just install it with &lt;a href="https://pip.pypa.io"&gt;pip&lt;/a&gt; it, but there are a
somewhat downside of &lt;a href="https://www.python.org"&gt;Python&lt;/a&gt;, which is &lt;a href="https://pip.pypa.io"&gt;pip&lt;/a&gt; installs those dependencies
globally.&lt;/p&gt;
&lt;p&gt;If you are familiar with &lt;a href="https://www.linux.org"&gt;Linux&lt;/a&gt; system, it looks rather natural and normal for
you, but if you are one of the modern developers who likes JavaScript eco
system like &lt;a href="https://www.npmjs.com"&gt;npm&lt;/a&gt;, then installing dependency only globally might look wierd.&lt;/p&gt;
&lt;h4&gt;VirtualEnv&lt;/h4&gt;
&lt;p&gt;Here comes &lt;a href="https://virtualenv.pypa.io"&gt;VirtualEnv&lt;/a&gt;. This tricks the system, and make the dependency able
to be installed locally avoiding to corrupt the whole system.&lt;/p&gt;
&lt;h5&gt;Install VirtualEnv&lt;/h5&gt;
&lt;p&gt;Fortunately, &lt;a href="https://www.debian.org"&gt;Debian&lt;/a&gt; team did a good job with keeping the packages up-to-date.
You can simply install &lt;a href="https://virtualenv.pypa.io"&gt;VirtualEnv&lt;/a&gt; by&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install python-virtualenv
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;Using VirtualEnv&lt;/h5&gt;
&lt;p&gt;Now, let's choose a directory, and make it the virtual environment of your
python system.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virutalenv path/to/the/directory
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To enable the virtual environment, you should just run following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; path/to/the/directory
&lt;span class="nb"&gt;source&lt;/span&gt; bin/activate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[&lt;code&gt;source&lt;/code&gt;] is &lt;a href="https://www.gnu.org/software/bash"&gt;bash&lt;/a&gt;'s built-in command. According to the document, that I
linked, it does the following.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Read and execute commands from the filename argument in the current shell
context.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, &lt;code&gt;source bin/activate&lt;/code&gt; command read the file, and alter the &lt;a href="https://www.gnu.org/software/bash"&gt;bash&lt;/a&gt;'s
environment, and makes you can run executable in the virtual environment.&lt;/p&gt;
&lt;p&gt;That's why deactivating this virtual environment is so easy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;deactivate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Becuase this &lt;code&gt;deactivate&lt;/code&gt; is already in your &lt;code&gt;PATH&lt;/code&gt;, although it won't be after
running this.&lt;/p&gt;
&lt;h4&gt;Pelican&lt;/h4&gt;
&lt;h5&gt;Install Pelican&lt;/h5&gt;
&lt;p&gt;After I activated the virtual environment, I've created a file called
&lt;code&gt;requirements.txt&lt;/code&gt;. It isn't necessarilly named like that, but it's on &lt;a href="https://pip.pypa.io"&gt;pip&lt;/a&gt;'s
&lt;a href="https://pip.pypa.io/en/stable/user_guide/#requirements-files"&gt;document&lt;/a&gt;, and
commonly used for &lt;a href="https://pip.pypa.io"&gt;pip&lt;/a&gt;'s dependency list.&lt;/p&gt;
&lt;p&gt;This is the content of the file. This is simple file, and each line has each
&lt;a href="https://www.python.org"&gt;Python&lt;/a&gt; module name.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pelican
markdown
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt; supports &lt;a href="http://docutils.sourceforge.net/rst.html"&gt;reStructedText&lt;/a&gt; by default, but it doesn't &lt;a href="https://daringfireball.net/projects/markdown"&gt;Markdown&lt;/a&gt;. I
personally prefer &lt;a href="https://daringfireball.net/projects/markdown"&gt;Markdown&lt;/a&gt; to &lt;a href="http://docutils.sourceforge.net/rst.html"&gt;reStructedText&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;Using Pelican&lt;/h5&gt;
&lt;p&gt;The next things to do is starting your &lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt; instance. The developers of
&lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt; are kind enough to provide you a easy-bootstraping command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will create some directories and files, including &lt;code&gt;Makefile&lt;/code&gt;,
&lt;code&gt;develop_server.sh&lt;/code&gt;, &lt;code&gt;pelicanconf.py&lt;/code&gt;, &lt;code&gt;publishconf.py&lt;/code&gt;. With first two files,
you have a bit of automation for building your &lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt; site locally during
developing. With the other two files, you can configure your &lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt; site as
you want.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;make devserver
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will turn on the watcher on &lt;code&gt;content&lt;/code&gt; directory, &lt;code&gt;themes&lt;/code&gt; directory, and
the configuration files including two that I mentioned above. Also, it turns on
the HTTP server which listens 8000 port by default.&lt;/p&gt;
&lt;h5&gt;Choosing a Theme&lt;/h5&gt;
&lt;p&gt;From &lt;a href="http://www.pelicanthemes.com"&gt;here&lt;/a&gt;, you can check various themes and its
screenshots. IIRC, all of them are hosted in &lt;a href="https://github.com"&gt;Github&lt;/a&gt;, and you can clone the
repository of the theme into your &lt;code&gt;themes&lt;/code&gt; directory. After set &lt;code&gt;THEME&lt;/code&gt; variable
to the path to the directory you've cloned, then it's good to go.&lt;/p&gt;
&lt;p&gt;There might be a few little changes necessary, like color, some configuration
variable, or even the layout of the theme.&lt;/p&gt;
&lt;h3&gt;Continuous Integration&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org"&gt;Travis CI&lt;/a&gt; is one of popular CI service. And it's well integrated with
&lt;a href="https://github.com"&gt;Github&lt;/a&gt;. You can register to &lt;a href="https://travis-ci.org"&gt;Travis CI&lt;/a&gt; with &lt;a href="https://github.com"&gt;Github&lt;/a&gt; account.&lt;/p&gt;
&lt;p&gt;With &lt;a href="https://travis-ci.org"&gt;Travis CI&lt;/a&gt;, you can push your content and source into &lt;code&gt;master&lt;/code&gt; branch of
your &lt;a href="https://github.com"&gt;Github&lt;/a&gt;, and &lt;a href="https://travis-ci.org"&gt;Travis CI&lt;/a&gt; will do the left, including building the source
and push to &lt;code&gt;gh-pages&lt;/code&gt; branch.&lt;/p&gt;
&lt;h4&gt;Github Repository&lt;/h4&gt;
&lt;p&gt;Here's a tip for the &lt;a href="https://github.com"&gt;Github&lt;/a&gt; repository you'll make. Don't use
&lt;code&gt;username.github.io&lt;/code&gt;. That repository is designed for using &lt;a href="https://github.com"&gt;Github&lt;/a&gt;'s default
making web site system, so using &lt;code&gt;gh-pages&lt;/code&gt; is simply not possible with this
repository.&lt;/p&gt;
&lt;p&gt;Let's make a new repository. You don't need to add any additional file, because
we are not going to clone this repository. Rather, we'll set it to the remote
repository of the local repository.&lt;/p&gt;
&lt;p&gt;If you haven't initialized your local repository, just do this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; path/to/the/directory
git init
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then with this command, set the remote repository.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git remote add origin url_of_the_github_repo
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, you can push to the &lt;a href="https://github.com"&gt;Github&lt;/a&gt; repository, you've created.&lt;/p&gt;
&lt;h4&gt;Travis&lt;/h4&gt;
&lt;p&gt;Once you've created &lt;a href="https://github.com"&gt;Github&lt;/a&gt;'s public repository, you can find it in &lt;a href="https://travis-ci.org"&gt;Travis CI&lt;/a&gt;
dashboard. It's on &lt;code&gt;https://travis-ci.org/profile/{github_username}&lt;/code&gt;. In this
page, you can activate the continuous integration by your &lt;a href="https://github.com"&gt;Github&lt;/a&gt; repository.&lt;/p&gt;
&lt;p&gt;Now, you need to create &lt;code&gt;.travis.yml&lt;/code&gt; file in your repository.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;language&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;python&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;python&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;3.6&amp;#39;&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;branches&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;only&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;master&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;install&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;pip install -r requirements.txt&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;script&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;make publish&lt;/span&gt;

&lt;span class="l l-Scalar l-Scalar-Plain"&gt;deploy&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;provider&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;pages&lt;/span&gt;
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;skip-cleanup&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;github-token&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;$GITHUB_TOKEN&lt;/span&gt;
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;keep-history&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;local-dir&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;output&lt;/span&gt;
    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;on&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
      &lt;span class="l l-Scalar l-Scalar-Plain"&gt;branch&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is my configuration file. My configuration has mainly two part. The former
is to build the &lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt; site, and the latter is to push to &lt;code&gt;gh-pages&lt;/code&gt; of the
&lt;a href="https://github.com"&gt;Github&lt;/a&gt; repository.&lt;/p&gt;
&lt;p&gt;Note that there is &lt;code&gt;$GITHUB_TOKEN&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Github Token&lt;/h4&gt;
&lt;p&gt;My configuration of &lt;a href="https://travis-ci.org"&gt;Travis CI&lt;/a&gt; pushes to my repository. To make it possible,
we need to tell &lt;a href="https://github.com"&gt;Github&lt;/a&gt; to allow &lt;a href="https://travis-ci.org"&gt;Travis CI&lt;/a&gt; to do that. This is why the token
is required.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/"&gt;Here&lt;/a&gt;'s
how to create the token. When you create the token, don't forget to check
&lt;code&gt;public_repo&lt;/code&gt; scope. That's the scope that allows &lt;a href="https://travis-ci.org"&gt;Travis CI&lt;/a&gt; to push a new
commits to your &lt;a href="https://github.com"&gt;Github&lt;/a&gt; repository.&lt;/p&gt;
&lt;p&gt;After you create the token, copy it and go to &lt;a href="https://travis-ci.org"&gt;Travis CI&lt;/a&gt;'s repository settings
page. The url would be &lt;code&gt;https://travis-ci.org/{username}/{repo_name}/settings&lt;/code&gt;.
In that page, you can configure the environment variables. Creat a new variable
with &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; for the name and the copied token for the value.&lt;/p&gt;
&lt;p&gt;Now, if you push the &lt;code&gt;master&lt;/code&gt; branch, then &lt;a href="https://travis-ci.org"&gt;Travis CI&lt;/a&gt; will be noticed. Then,
it will build, make a new commit, and push to &lt;code&gt;gh-pages&lt;/code&gt; branch. It's the time
to check out &lt;code&gt;https://{username}.github.io/{repo_name}&lt;/code&gt;&lt;/p&gt;</content><category term="github"></category><category term="travis"></category><category term="pelican"></category><category term="python"></category><category term="CI"></category></entry><entry><title>Best Practice to Check Table Information in MySQL</title><link href="https://soundlake.net/posts/2017/01/09/best-practice-to-check-table-information-in-mysql/" rel="alternate"></link><published>2017-01-09T10:00:00+01:00</published><updated>2018-04-03T22:00:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.net,2017-01-09:/posts/2017/01/09/best-practice-to-check-table-information-in-mysql/</id><summary type="html">&lt;p&gt;There's a better way to check the table schema in MySQL.&lt;/p&gt;</summary><content type="html">&lt;p&gt;I usually use &lt;code&gt;DESC&lt;/code&gt; to check the columns of the table,
which is similar to &lt;code&gt;EXPLAIN&lt;/code&gt;.
But it's not enough espeicially when I want to check indexes with columns.&lt;/p&gt;
&lt;p&gt;Recently, I got introduced of &lt;code&gt;SHOW CREATE TABLE&lt;/code&gt;.
It seems strange, but it shows the SQL for creating the table.
The result includes lot's of unnecessary lines, and you can clean them with &lt;code&gt;\G&lt;/code&gt; in the end.
So, if you want to check columns and indexes of the table, you can use the following.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;G&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="MySQL"></category><category term="MariaDB"></category></entry><entry><title>Add Binary Path in PowerShell</title><link href="https://soundlake.net/posts/2016/12/28/add-binary-path-in-powershell/" rel="alternate"></link><published>2016-12-28T10:00:00+01:00</published><updated>2018-04-03T21:00:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.net,2016-12-28:/posts/2016/12/28/add-binary-path-in-powershell/</id><summary type="html">&lt;p&gt;Configure your PATH environment variable in PowerShell&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently, I need to use &lt;code&gt;makecert&lt;/code&gt; command in PowerShell, but &lt;code&gt;makecert.exe&lt;/code&gt; wasn't
there by default. So, I installed a few things. But still it didn't work. I found
the executable file under &lt;code&gt;C:\Program Files (x86)\Windows Kits\10\bin\x64\&lt;/code&gt;, but the
command wasn't recognized. Apparently, just like bash or other linux shell, it needs
profile file.&lt;/p&gt;
&lt;p&gt;The default path for the profile file is
&lt;code&gt;C:\Users\[username]\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1&lt;/code&gt;.
It is stored in &lt;code&gt;$profile&lt;/code&gt; variable. You can check its value by simply typing the
variable in PowerShell.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;$profile&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;But the file does not exist by default. You can check if the file exists with
typing in the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;test-path &lt;span class="nv"&gt;$profile&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There's no &lt;code&gt;touch&lt;/code&gt; command in PowerShell. Instead, there is &lt;code&gt;new-item&lt;/code&gt; command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;New-Item &lt;span class="nv"&gt;$profile&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However, the directory does not exist either by default. You will see the
following error message.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;New-Item : Could not find a part of the path
&amp;#39;C:\Users\[username]\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1&amp;#39;.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can easily create a directory with &lt;code&gt;mkdir&lt;/code&gt;. After creating the directory,
then try &lt;code&gt;New-Item&lt;/code&gt; command once again. Then, you have your own PowerShell
profile. In this file, you can add the following line, then restart the
PowerShell.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Add&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Path&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SYNOPSIS&lt;/span&gt;
      &lt;span class="nx"&gt;Adds&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;Directory&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;Current&lt;/span&gt; &lt;span class="nx"&gt;Path&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DESCRIPTION&lt;/span&gt;
      &lt;span class="nx"&gt;Add&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;directory&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;useful&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;
      &lt;span class="nx"&gt;temporary&lt;/span&gt; &lt;span class="nx"&gt;changes&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="nx"&gt;or&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;when&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt;
      &lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;adjusting&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="nx"&gt;within&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;powershell&lt;/span&gt;
      &lt;span class="nx"&gt;prompt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;EXAMPLE&lt;/span&gt;
      &lt;span class="nx"&gt;Add&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Path&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Directory&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\Program Files\Notepad++&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PARAMETER&lt;/span&gt; &lt;span class="nx"&gt;Directory&lt;/span&gt;
      &lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;directory&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;CmdletBinding&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;
  &lt;span class="nx"&gt;param&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;Mandatory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;$True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;ValueFromPipeline&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;$True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;ValueFromPipelineByPropertyName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;$True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;HelpMessage&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;What directory would you like to add?&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Alias&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]]&lt;/span&gt;&lt;span class="nx"&gt;$Directory&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="nx"&gt;PROCESS&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;$Path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$env&lt;/span&gt;:&lt;span class="kt"&gt;PATH.Split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$dir&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;$Directory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$Path&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt; &lt;span class="nx"&gt;$dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;Write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Verbose&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$dir is already present in PATH&amp;quot;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Test&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Path&lt;/span&gt; &lt;span class="nx"&gt;$dir&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;Write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Verbose&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$dir does not exist in the filesystem&amp;quot;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;$Path&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;$dir&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;$env&lt;/span&gt;:&lt;span class="kt"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nx"&gt;Join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$Path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;Add&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Path&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Directory&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\Program Files (x86)\Windows Kits\10\bin\x64\&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This code is create by &lt;a href="https://github.com/adrianhall"&gt;splunk&lt;/a&gt; and published in
&lt;a href="http://blogs.splunk.com/2013/07/29/powershell-profiles-and-add-path/"&gt;his blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More information for PowerShell profile in
&lt;a href="https://technet.microsoft.com/en-us/library/2008.10.windowspowershell.aspx"&gt;MicroSoft Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;PS. In my environment, running cusgom script was disabled. I had to run the
following command to enable to run the script.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Set-ExecutionPolicy remotesigned
&lt;/pre&gt;&lt;/div&gt;</content><category term="Windows"></category><category term="PowerShell"></category><category term="environment"></category></entry><entry><title>A Good Example of HTTP HEAD Method</title><link href="https://soundlake.net/posts/2016/12/23/a-good-example-of-http-head-method/" rel="alternate"></link><published>2016-12-23T10:00:00+01:00</published><updated>2018-04-03T20:00:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.net,2016-12-23:/posts/2016/12/23/a-good-example-of-http-head-method/</id><summary type="html">&lt;p&gt;HEAD method is not the most popular, but still it has a role.&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've never been used &lt;code&gt;HEAD&lt;/code&gt; method in HTTP. I even don't know what
is in the HTTP method list. Usually I only use &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt;. I
rarely use &lt;code&gt;DELETE&lt;/code&gt; and &lt;code&gt;FETCH&lt;/code&gt;. But other than that I don't use
anything.&lt;/p&gt;
&lt;p&gt;But I had an issue. I got a RESTFul API for file storage. And at some
point I needed to check if the file exists. It's too much to &lt;code&gt;GET&lt;/code&gt; all
the payload of the file contents for checking if the file exists.
I was thinking if I should introduce the new API, but it's not RESTFul.&lt;/p&gt;
&lt;p&gt;And here we are. We have &lt;code&gt;HEAD&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://www.w3.org"&gt;w3&lt;/a&gt; explains about &lt;code&gt;HEAD&lt;/code&gt; following;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The HEAD method is identical to GET except that the server MUST NOT
return a message-body in the response. The metainformation contained
in the HTTP headers in response to a HEAD request SHOULD be identical
to the information sent in response to a GET request. This method can
be used for obtaining metainformation about the entity implied by the
request without transferring the entity-body itself. This method is
often used for testing hypertext links for validity, accessibility,
and recent modification.&lt;/p&gt;
&lt;p&gt;The response to a HEAD request MAY be cacheable in the sense that the
information contained in the response MAY be used to update a previously
cached entity from that resource. If the new field values indicate that
the cached entity differs from the current entity (as would be indicated
by a change in Content-Length, Content-MD5, ETag or Last-Modified),
then the cache MUST treat the cache entry as stale.&lt;/p&gt;
&lt;p&gt;from &lt;a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html"&gt;HTTP methods&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now I can just get the header with &lt;code&gt;HEAD&lt;/code&gt; method and check if the file exists
without downloading all the payload.&lt;/p&gt;</content><category term="http"></category><category term="restful"></category><category term="api"></category></entry><entry><title>Create dummy file in Linux</title><link href="https://soundlake.net/posts/2016/12/16/create-dummy-file-in-linux/" rel="alternate"></link><published>2016-12-16T10:00:00+01:00</published><updated>2018-04-03T17:00:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.net,2016-12-16:/posts/2016/12/16/create-dummy-file-in-linux/</id><summary type="html">&lt;p&gt;A few options to create a dummy file in Linux&lt;/p&gt;</summary><content type="html">&lt;h3&gt;3 options to create a dummy file&lt;/h3&gt;
&lt;p&gt;Sometimes a big size dummy file is necessary.
There are roughly 3 ways to achieve this: &lt;code&gt;dd&lt;/code&gt;, &lt;code&gt;truncate&lt;/code&gt;, &lt;code&gt;fallocate&lt;/code&gt;.
I found them from &lt;a href="http://stackoverflow.com/questions/257844/quickly-create-a-large-file-on-a-linux-system"&gt;this Stackoverflow answer&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;1. &lt;code&gt;dd&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;It's the most famous one, but it's basically for copy data from one to another
in hard way. It's accurate but slow. If you want just a dummy file, it's not a
good choice.&lt;/p&gt;
&lt;h4&gt;2. &lt;code&gt;truncate&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;It's maybe the fasted way. But it doesn't actually allocate the space. What it
does is cheat the file system with repetition of smaller amount of data. If you
really want to &lt;em&gt;allocate&lt;/em&gt; the space, it's not the best one.&lt;/p&gt;
&lt;h4&gt;3. &lt;code&gt;fallocate&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Now, it's the last and &lt;strong&gt;the best&lt;/strong&gt; option.&lt;/p&gt;
&lt;h3&gt;More about &lt;code&gt;fallocate&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The basic usage is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fallocate -l &lt;span class="o"&gt;[&lt;/span&gt;length&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;filename&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="linux"></category><category term="dummy"></category><category term="command"></category><category term="CLI"></category></entry></feed>