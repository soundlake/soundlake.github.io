<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>soundlake</title><link href="https://soundlake.xyz/" rel="alternate"></link><link href="https://soundlake.xyz/feeds/all.atom.xml" rel="self"></link><id>https://soundlake.xyz/</id><updated>2019-05-22T18:35:00+02:00</updated><entry><title>Going deeper in Git tag</title><link href="https://soundlake.xyz/posts/2019/05/22/going-deeper-in-git-tag.html" rel="alternate"></link><published>2019-05-22T18:35:00+02:00</published><updated>2019-05-22T18:35:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.xyz,2019-05-22:/posts/2019/05/22/going-deeper-in-git-tag.html</id><summary type="html">&lt;p&gt;Listing git&amp;nbsp;tags&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently, I got a chance to read &lt;a href="https://git-scm.com/docs/git-tag"&gt;&lt;code&gt;git tag&lt;/code&gt;&lt;/a&gt; command.
We found a bug and confirmed which commit has introduced it,
but we could not point out which released versions are&amp;nbsp;affected.&lt;/p&gt;
&lt;p&gt;Apparently, &lt;code&gt;git tag&lt;/code&gt; command supports
&lt;a href="https://git-scm.com/docs/git-tag#Documentation/git-tag.txt---containsltcommitgt"&gt;&lt;code&gt;--contains&lt;/code&gt;&lt;/a&gt; argument.
This argument takes the commit&amp;nbsp;hash.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git tag --contains 12AB34
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It might show too many lines.
Then you can use &lt;a href="https://git-scm.com/docs/git-tag#Documentation/git-tag.txt---list"&gt;&lt;code&gt;--list&lt;/code&gt;&lt;/a&gt;
(&lt;code&gt;-l&lt;/code&gt; in short) argument
which allows you to filter the tags with pattern. For&amp;nbsp;example,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git tag --contains 12AB34 --list &lt;span class="m"&gt;4&lt;/span&gt;.2.*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Dev"></category><category term="git"></category><category term="git-tag"></category></entry><entry><title>Add some skills on my Git-fu</title><link href="https://soundlake.xyz/posts/2018/08/06/add-some-skills-on-my-git-fu.html" rel="alternate"></link><published>2018-08-06T11:12:00+02:00</published><updated>2018-08-06T11:12:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.xyz,2018-08-06:/posts/2018/08/06/add-some-skills-on-my-git-fu.html</id><summary type="html">&lt;p&gt;Git tips, which make the dev life&amp;nbsp;easier&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today, one of my colleague introduced me &lt;a href="https://about.gitlab.com/2016/12/08/git-tips-and-tricks/"&gt;this article&lt;/a&gt;.
Apparently, it&amp;#8217;s written already 2 years ago. There are something I already know, but also are still some new and good tips for&amp;nbsp;me.&lt;/p&gt;
&lt;h3&gt;Global&amp;nbsp;Configurations&lt;/h3&gt;
&lt;h4&gt;Deleting a local branch which is already removed in the&amp;nbsp;remote&lt;/h4&gt;
&lt;p&gt;Since, I&amp;#8217;m in an actively git-using team, many branches are created and and deleted.
Whenever my merge request is merged, I had to remove my local leftovers&amp;nbsp;manually.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git remote prune &amp;lt;remote name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But now I don&amp;#8217;t have to do that. With this global configuration,
it&amp;#8217;ll be done automatically during &lt;code&gt;fetch&lt;/code&gt; or &lt;code&gt;pull&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git config --global fetch.prune &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;Auto&amp;#8221; autosquash,&amp;nbsp;autostash&lt;/h4&gt;
&lt;p&gt;When I use &lt;code&gt;rebase&lt;/code&gt; command, I tend to use &lt;code&gt;-i --autosquash --autostash&lt;/code&gt;.
But I didn&amp;#8217;t realize I could configure them into the global configuration&amp;nbsp;file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git config --global rebase.autosquash &lt;span class="nb"&gt;true&lt;/span&gt;
git config --global rebase.autostash &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Better &lt;code&gt;git lola&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://blog.kfish.org/2010/04/git-lola.html"&gt;&lt;code&gt;git lola&lt;/code&gt;&lt;/a&gt; is one of my favorite command.
And I found an idea for a little&amp;nbsp;improvement.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git config --global alias.lol&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;log --graph --decorate --pretty=format:&amp;#39;%C(auto)%h -%d%Creset %s %Cgreen(%cr)%Creset&amp;#39; --abbrev-commit&amp;quot;&lt;/span&gt;
git config --global alias.lola&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;log --graph --decorate --pretty=format:&amp;#39;%C(auto)%h -%d%Creset %s %Cgreen(%cr)%Creset&amp;#39; --abbrev-commit --all&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The difference is custom formatting with &lt;code&gt;%C(auto)&lt;/code&gt;, which derives the original color scheme of &lt;code&gt;oneline&lt;/code&gt; option,
and &lt;code&gt;%cr&lt;/code&gt;, which displays the commit date in relative&amp;nbsp;format.&lt;/p&gt;</content><category term="Dev"></category><category term="git"></category><category term="git-config"></category></entry><entry><title>Migration from VirtualBox to Hyper-V</title><link href="https://soundlake.xyz/posts/2018/04/20/migration-from-virtualbox-to-hyper-v.html" rel="alternate"></link><published>2018-04-20T12:05:00+02:00</published><updated>2018-04-20T12:05:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.xyz,2018-04-20:/posts/2018/04/20/migration-from-virtualbox-to-hyper-v.html</id><summary type="html">&lt;p&gt;I was stuck in quite a problem of this&amp;nbsp;migration.&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Background&amp;nbsp;Story&lt;/h3&gt;
&lt;p&gt;The first purpose was running &lt;a href="https://docs.gitlab.com/runner/"&gt;Gitlab Runner&lt;/a&gt; in a local machine.
Then I realise that I need &lt;a href="https://store.docker.com/editions/community/docker-ce-desktop-windows"&gt;Docker for Windows&lt;/a&gt; for the local Windows machine.
And, of course, unfortunately, it requires &lt;a href="https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/about/"&gt;Hyper-V&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The reason why it&amp;#8217;s unfortunate is that I was using VirtualBox quite actively,
including 2 active virtual machines, and when I install &lt;a href="https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/about/"&gt;Hyper-V&lt;/a&gt;,
then I can&amp;#8217;t use VirtualBox&amp;nbsp;anymore.&lt;/p&gt;
&lt;p&gt;I was thinking to use old [Docker Toolbox][], but I&amp;#8217;m not sure until when it&amp;#8217;s supported.
So, I searched for the way to migrate VirtualBox &lt;span class="caps"&gt;VM&lt;/span&gt; to &lt;a href="https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/about/"&gt;Hyper-V&lt;/a&gt; &lt;span class="caps"&gt;VM&lt;/span&gt;.&lt;/p&gt;
&lt;h3&gt;The&amp;nbsp;Instruction&lt;/h3&gt;
&lt;h4&gt;1. Export existing VirtualBox&amp;nbsp;VMs&lt;/h4&gt;
&lt;p&gt;That&amp;#8217;s an easy part. In VirtualBox &lt;span class="caps"&gt;GUI&lt;/span&gt;, you can find export menu.
If you click it, then a popup comes up, and you can choose the location of the exported file.
Note that, you need to change the format. The recommended one is &lt;strong&gt;&lt;span class="caps"&gt;OVF&lt;/span&gt;&amp;nbsp;2.0&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;2. Disassemble the exported&amp;nbsp;file&lt;/h4&gt;
&lt;p&gt;The &lt;span class="caps"&gt;OVF&lt;/span&gt; format is basically a zip archive with some information for the &lt;span class="caps"&gt;VM&lt;/span&gt;.
You can unzip it with your favorite unzipper. I used &lt;a href="https://www.7-zip.org/"&gt;7zip&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The only file it matters is &lt;code&gt;*.vmdk&lt;/code&gt; file. It is the virtual &lt;span class="caps"&gt;HDD&lt;/span&gt; of your &lt;span class="caps"&gt;VM&lt;/span&gt;.&lt;/p&gt;
&lt;h4&gt;3. Install some&amp;nbsp;tools&lt;/h4&gt;
&lt;h5&gt;&lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=42497"&gt;Microsoft Virtual Machine&amp;nbsp;Converter&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;Firstly, &lt;a href="https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/about/"&gt;Hyper-V&lt;/a&gt; is picky enough not to recognize this &lt;code&gt;*.vmdk&lt;/code&gt; format.
So, you need to convert it with a tool that MicroSoft provides.
It&amp;#8217;s called &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=42497"&gt;Microsoft Virtual Machine Converter&lt;/a&gt;.
You can download it, and install&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;Open Powershell, and run this&amp;nbsp;command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Import&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C:\Program Files\Microsoft Virtual Machine Converter\MvmcCmdlet.psd1&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Convert&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;VHD&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;exported_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vmdk&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;target_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vhdx&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Passthru&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5&gt;&lt;a href="http://members.ozemail.com.au/~nulifetv/freezip/freeware/dsfok.zip"&gt;dsfok&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;In high possibility, the command above will fail.
Because the format for the &lt;span class="caps"&gt;VMDK&lt;/span&gt; file from VirtualBox has some kind of wrong description.
To edit the description of &lt;span class="caps"&gt;VMDK&lt;/span&gt; file, this tool is&amp;nbsp;required.&lt;/p&gt;
&lt;p&gt;You can download and unzip it, then you can use&amp;nbsp;it.&lt;/p&gt;
&lt;h4&gt;4. Tweak the &lt;span class="caps"&gt;VMDK&lt;/span&gt;&amp;nbsp;file.&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path\to\dsfok\dsfo.exe &amp;quot;path\to\vmdk\file.vmdk&amp;quot; 512 1024 desc.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A new &lt;code&gt;desc.txt&lt;/code&gt; file is now created, and it contains the description of the &lt;span class="caps"&gt;VMDK&lt;/span&gt; file.
Edit the file accordingly by removing or commenting out the erronous line.
The error message from &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=42497"&gt;Microsoft Virtual Machine Converter&lt;/a&gt; has some&amp;nbsp;hints.&lt;/p&gt;
&lt;p&gt;Then apply the new description file into the &lt;span class="caps"&gt;VMDK&lt;/span&gt;&amp;nbsp;file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path\to\dsfok\dsfi.exe &amp;quot;path\to\vmdk\file.vmdk&amp;quot; 512 1024 desc.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Run &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=42497"&gt;Microsoft Virtual Machine Converter&lt;/a&gt;, if there&amp;#8217;s no more&amp;nbsp;errors.&lt;/p&gt;
&lt;h4&gt;5. Create a new &lt;span class="caps"&gt;VM&lt;/span&gt; in &lt;a href="https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/about/"&gt;Hyper-V&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;If there&amp;#8217;s no more error, then &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=42497"&gt;Microsoft Virtual Machine Converter&lt;/a&gt; will create a new virtual &lt;span class="caps"&gt;HDD&lt;/span&gt; for &lt;a href="https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/about/"&gt;Hyper-V&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Creating a new &lt;span class="caps"&gt;VM&lt;/span&gt; in &lt;a href="https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/about/"&gt;Hyper-V&lt;/a&gt; is quite straight forward.
Don&amp;#8217;t forget to add newly created virtual &lt;span class="caps"&gt;HDD&lt;/span&gt; to this new &lt;span class="caps"&gt;VM&lt;/span&gt;.&lt;/p&gt;
&lt;h3&gt;Something&amp;nbsp;left&lt;/h3&gt;
&lt;p&gt;Unfortunately, the migration is not fully done yet.
The network configuration is&amp;nbsp;missing.&lt;/p&gt;
&lt;p&gt;I can&amp;#8217;t create any virtual swich, and currently, I don&amp;#8217;t have network access from the host machine to guest &lt;span class="caps"&gt;VM&lt;/span&gt;.
The reason here is Trend Office Scan prevents to create virtual switch in &lt;a href="https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/about/"&gt;Hyper-V&lt;/a&gt;.
And this Trend Office Scan is managed by company&amp;#8217;s tech support team,
and I don&amp;#8217;t have permission to change the configuration or disable it&amp;nbsp;temporarily.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m longing for using &lt;a href="https://docs.gitlab.com/runner/"&gt;Gitlab Runner&lt;/a&gt; on the local machine&amp;nbsp;someday.&lt;/p&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://aadamich.wordpress.com/articles/hyper-v/convert-and-launch-virtualbox-vhd-on-hyper-v/&lt;/li&gt;
&lt;li&gt;https://blogs.msdn.microsoft.com/timomta/2015/06/11/how-to-convert-a-vmware-vmdk-to-hyper-v-vhd/&lt;/li&gt;
&lt;li&gt;https://stackoverflow.com/questions/37481737/error-when-converting-vmware-virtual-disk-to-hyperv&lt;/li&gt;
&lt;/ul&gt;</content><category term="Dev"></category><category term="windows"></category><category term="virtual machine"></category><category term="hyper-v"></category><category term="migration"></category></entry><entry><title>Sync Date and Time in Debian</title><link href="https://soundlake.xyz/posts/2018/04/11/sync-date-and-time-in-debian.html" rel="alternate"></link><published>2018-04-11T12:05:00+02:00</published><updated>2018-04-11T12:05:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.xyz,2018-04-11:/posts/2018/04/11/sync-date-and-time-in-debian.html</id><summary type="html">&lt;p&gt;Using ntp, you can easily sync your Debian machine&amp;#8217;s date ane&amp;nbsp;time&lt;/p&gt;</summary><content type="html">&lt;p&gt;I thought I only need &lt;span class="caps"&gt;NTP&lt;/span&gt; client to synchronize the date and time of my linux
machine. But apparently, &lt;code&gt;ntpdate&lt;/code&gt; runs once, and &lt;a href="https://www.debian.org"&gt;Debian&lt;/a&gt; &amp;#8220;expects&amp;#8221; the user
to install &lt;code&gt;ntp&lt;/code&gt; according to &lt;a href="https://unix.stackexchange.com/questions/137266/how-to-keep-debian-internal-clock-synchronized-with-ntp-servers/137269#137269"&gt;this stack exchange
answer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Installing it is just easy, especially if you&amp;#8217;re familiar with &lt;a href="https://www.debian.org"&gt;Debian&lt;/a&gt; or
&lt;a href="https://www.ubuntu.com"&gt;Ubuntu&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get install ntp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After the installation, you can check if it&amp;#8217;s&amp;nbsp;running.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo systemctl status ntp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Dev"></category><category term="linux"></category><category term="debian"></category><category term="ntp"></category></entry><entry><title>My First Accepted Github Pull Request</title><link href="https://soundlake.xyz/posts/2018/04/10/my-first-accepted-github-pull-request.html" rel="alternate"></link><published>2018-04-10T11:05:00+02:00</published><updated>2018-04-10T11:05:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.xyz,2018-04-10:/posts/2018/04/10/my-first-accepted-github-pull-request.html</id><summary type="html">&lt;p&gt;I&amp;#8217;ve requested my first Github pull request&amp;nbsp;ever.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last night, I&amp;#8217;ve applied &lt;a href="https://pypi.python.org/pypi/typogrify"&gt;Typogrify&lt;/a&gt; to this blog. It&amp;#8217;s a default plugin in
&lt;a href="http://getpelican.com"&gt;Pelican&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But I found strange result. The title has unnecessary glitch on it. In the
&lt;a href="https://github.com/getpelican/pelican/blob/master/pelican/readers.py#L603"&gt;pelican source&lt;/a&gt;,
I could find that &lt;a href="https://pypi.python.org/pypi/typogrify"&gt;Typogrify&lt;/a&gt; is adding the tag intentionally. Then, the
template should be remove that. &lt;a href="http://jinja.pocoo.org"&gt;Jinja2&lt;/a&gt; has
&lt;a href="http://jinja.pocoo.org/docs/2.10/templates/#striptags"&gt;&lt;code&gt;striptags&lt;/code&gt;&lt;/a&gt;&amp;nbsp;filter.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve tested the following&amp;nbsp;code.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;typogrify.filters&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;typogrify&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;jinja2.filters&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;do_striptags&lt;/span&gt;

&lt;span class="n"&gt;TEST_STR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Hello WORLD&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TEST_STR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Hello WORLD&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;typogrify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TEST_STR&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# Hello &amp;lt;span class=&amp;quot;caps&amp;quot;&amp;gt;WORLD&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;do_striptags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;typogrify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TEST_STR&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="c1"&gt;# Hello WORLD&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Each libraries work as expected. Then it was the time to check the template
files. And apparently, in &lt;code&gt;aritcle.html&lt;/code&gt;, &lt;code&gt;striptags&lt;/code&gt; filter wasn&amp;#8217;t applied to
&lt;code&gt;article.title&lt;/code&gt; variable.&lt;/p&gt;
&lt;p&gt;I forked &lt;a href="https://github.com/Parbhat/pelican-blue"&gt;pelican-blue&lt;/a&gt; template source, and cloned it to my local direcotyr,
and created a commit, and pushed it into &lt;a href="https://github.com/soundlake/pelican-blue"&gt;my cloned repo&lt;/a&gt;, and created &lt;a href="https://github.com/Parbhat/pelican-blue/pull/14"&gt;a pull
request&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And this morning, it&amp;#8217;s&amp;nbsp;merged!&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve reported some issues on some open source project, but this is the first
time that my code is included in the existing&amp;nbsp;project.&lt;/p&gt;</content><category term="Dev"></category><category term="git"></category><category term="gitlab"></category><category term="development"></category></entry><entry><title>Migrating the git remote repo from single to multiple</title><link href="https://soundlake.xyz/posts/2018/04/09/migrating-the-git-remote-repo-from-single-to-multiple.html" rel="alternate"></link><published>2018-04-09T20:05:00+02:00</published><updated>2018-04-09T22:00:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.xyz,2018-04-09:/posts/2018/04/09/migrating-the-git-remote-repo-from-single-to-multiple.html</id><summary type="html">&lt;p&gt;A story of migrating git repo, and the advantages of using&amp;nbsp;GitLab.&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Personal History on Git Pull&amp;nbsp;Request&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;ve learned about &lt;a href="https://git-scm.com"&gt;Git&lt;/a&gt; many years ago, and since a few years ago I&amp;#8217;ve been
using &lt;a href="https://git-scm.com"&gt;Git&lt;/a&gt; actively. But pull request or merge request hasn&amp;#8217;t been my favorite
thing until a couple of month&amp;nbsp;ago.&lt;/p&gt;
&lt;h4&gt;Before, at My&amp;nbsp;Work&lt;/h4&gt;
&lt;p&gt;We were using single remote repository and each developers used their own
branch name prefix. The work flow goes like&amp;nbsp;&amp;#8230;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Each developer works on their own&amp;nbsp;branch.&lt;/li&gt;
&lt;li&gt;When the branch is ready, then the developer notify it to the&amp;nbsp;maintainer.&lt;/li&gt;
&lt;li&gt;The maintainer checks the branch and merges into the main&amp;nbsp;branch.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The biggest downside of this was usually the branches are over populated. It
made the log of the repo quite confusing. And the result of &lt;code&gt;git branch&lt;/code&gt; always
exceeded one&amp;nbsp;page.&lt;/p&gt;
&lt;p&gt;Another thing had to be improved was the logging for merging. Generally, we
only have one maintainer on our team, and he handled those merge notices from
each developers, but the procedure was rather obscure and even the notice was
sometimes forgotten for busy&amp;nbsp;work.&lt;/p&gt;
&lt;h4&gt;Migration to &lt;a href="https://gitlab.com"&gt;GitLab&lt;/a&gt; with Multiple Personal&amp;nbsp;Repositories&lt;/h4&gt;
&lt;p&gt;We gradually moved to &lt;a href="https://gitlab.com"&gt;GitLab&lt;/a&gt;. Still there are some rumors about the
difficulty of deploying self-hosted &lt;a href="https://gitlab.com"&gt;GitLab&lt;/a&gt;. And we don&amp;#8217;t dare doing such
risky experiment. My team is still small, and &lt;a href="https://gitlab.com"&gt;GitLab&lt;/a&gt;&amp;#8216;s free plan has good
enough&amp;nbsp;features.&lt;/p&gt;
&lt;p&gt;These are the details of how to move to &lt;a href="https://gitlab.com"&gt;GitLab&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The maintainer creates the main repo and the&amp;nbsp;group.&lt;/li&gt;
&lt;li&gt;The developers sign up, join the group, create their own&amp;nbsp;repo.&lt;/li&gt;
&lt;li&gt;The developers change the remote repo configuration on the local&amp;nbsp;repo.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git remote set-url origin &lt;span class="o"&gt;{&lt;/span&gt;personal remote repo&lt;span class="o"&gt;}&lt;/span&gt;
git remote add main &lt;span class="o"&gt;{&lt;/span&gt;main remote repo&lt;span class="o"&gt;}&lt;/span&gt;
git remote set-url --push main DISABLE_PUSH_TO_MAIN &lt;span class="c1"&gt;# This is optional&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol start="4"&gt;&lt;li&gt;Clean up the unnecessary&amp;nbsp;branches&lt;/li&gt;&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; &lt;code&gt;DISABLE_PUSH_TO_MAIN&lt;/code&gt; is arbiturarily chosen string. You can set any
invalid &lt;span class="caps"&gt;URL&lt;/span&gt; for &lt;code&gt;main&lt;/code&gt;&lt;span class="quo"&gt;&amp;#8216;&lt;/span&gt;s push &lt;span class="caps"&gt;URL&lt;/span&gt; for disabling push to the &lt;code&gt;main&lt;/code&gt; repo. If you
are one of the maintainers, then it&amp;#8217;s not&amp;nbsp;necessary.&lt;/p&gt;
&lt;h4&gt;Now, at My&amp;nbsp;Work&lt;/h4&gt;
&lt;p&gt;Now, each developer manages their own repo. And time to time they checkes the
main repo with &lt;code&gt;git fetch main&lt;/code&gt;. If a pile of commits are ready to be merged,
then the developer create a merge&amp;nbsp;request.&lt;/p&gt;
&lt;h4&gt;The Advatages of using this new&amp;nbsp;system&lt;/h4&gt;
&lt;p&gt;There are some unexpected&amp;nbsp;advatages.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can &lt;strong&gt;comment on each diff line&lt;/strong&gt; of code in &lt;a href="https://gitlab.com"&gt;GitLab&lt;/a&gt;. This makes the
  feedback easy and crystal&amp;nbsp;clear.&lt;/li&gt;
&lt;li&gt;You can configure a repo to &lt;strong&gt;limit the branch to push&lt;/strong&gt;. You can easily
  protect your main&amp;nbsp;repo.&lt;/li&gt;
&lt;li&gt;You can use &lt;a href="https://gitlab.com"&gt;GitLab&lt;/a&gt;&amp;#8216;s &lt;strong&gt;contiuous integration&lt;/strong&gt; feature. Once it&amp;#8217;s
  configured, all you need to do is pushing to the remote branch, and the other
  job is done by automated &lt;a href="https://gitlab.com"&gt;GitLab&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You can set a &lt;strong&gt;flag on the merge request&lt;/strong&gt;. And then the request will be
  merged automatically after the contiuous integration is done&amp;nbsp;successfully.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Yet we&amp;#8217;re discovering the good side of &lt;a href="https://gitlab.com"&gt;GitLab&lt;/a&gt;.&lt;/p&gt;</content><category term="Dev"></category><category term="git"></category><category term="gitlab"></category><category term="development"></category></entry><entry><title>The Exhaustive Guide to Build Pelican Blog with Github and Travis-CI</title><link href="https://soundlake.xyz/posts/2018/04/02/the-exhaustive-guide-to-build-pelican-blog-with-github-and-travis-ci.html" rel="alternate"></link><published>2018-04-02T10:28:00+02:00</published><updated>2018-04-02T21:51:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.xyz,2018-04-02:/posts/2018/04/02/the-exhaustive-guide-to-build-pelican-blog-with-github-and-travis-ci.html</id><summary type="html">&lt;p&gt;A single document for the walkthrough setup your static page blog with Pelican on Github and Travis-&lt;span class="caps"&gt;CI&lt;/span&gt;.&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;m writing this mostly for archiving what I&amp;#8217;ve done for setting up this&amp;nbsp;blog.&lt;/p&gt;
&lt;p&gt;The internet is very big water, and you can whatever you want, but I couldn&amp;#8217;t
find a single document that explain&amp;nbsp;everything.&lt;/p&gt;
&lt;p&gt;I know. In this software world, you can never &lt;em&gt;explain everything&lt;/em&gt;. But I
wanted a bit more kind and careful document to show me the&amp;nbsp;walkthrough.&lt;/p&gt;
&lt;p&gt;The followings are the tech that I&amp;#8217;ve used for setting up my new&amp;nbsp;blog.&lt;/p&gt;
&lt;h3&gt;Setup in&amp;nbsp;Local&lt;/h3&gt;
&lt;p&gt;Firstly, I&amp;#8217;ve checked with &lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt;. There are many options, and actually
&lt;a href="https://github.com"&gt;Github&lt;/a&gt; seems easy with &lt;a href="https://jekyllrb.com"&gt;Jekyll&lt;/a&gt;, but &lt;a href="http://www.ruby-lang.org"&gt;Ruby&lt;/a&gt; is not my best thing, while
I&amp;#8217;m a kind of fond of &lt;a href="https://www.python.org"&gt;Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To use &lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt;, you can just install it with &lt;a href="https://pip.pypa.io"&gt;pip&lt;/a&gt; it, but there are a
somewhat downside of &lt;a href="https://www.python.org"&gt;Python&lt;/a&gt;, which is &lt;a href="https://pip.pypa.io"&gt;pip&lt;/a&gt; installs those dependencies&amp;nbsp;globally.&lt;/p&gt;
&lt;p&gt;If you are familiar with &lt;a href="https://www.linux.org"&gt;Linux&lt;/a&gt; system, it looks rather natural and normal for
you, but if you are one of the modern developers who likes JavaScript eco
system like &lt;a href="https://www.npmjs.com"&gt;npm&lt;/a&gt;, then installing dependency only globally might look&amp;nbsp;wierd.&lt;/p&gt;
&lt;h4&gt;VirtualEnv&lt;/h4&gt;
&lt;p&gt;Here comes &lt;a href="https://virtualenv.pypa.io"&gt;VirtualEnv&lt;/a&gt;. This tricks the system, and make the dependency able
to be installed locally avoiding to corrupt the whole&amp;nbsp;system.&lt;/p&gt;
&lt;h5&gt;Install&amp;nbsp;VirtualEnv&lt;/h5&gt;
&lt;p&gt;Fortunately, &lt;a href="https://www.debian.org"&gt;Debian&lt;/a&gt; team did a good job with keeping the packages up-to-date.
You can simply install &lt;a href="https://virtualenv.pypa.io"&gt;VirtualEnv&lt;/a&gt;&amp;nbsp;by&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get install python-virtualenv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5&gt;Using&amp;nbsp;VirtualEnv&lt;/h5&gt;
&lt;p&gt;Now, let&amp;#8217;s choose a directory, and make it the virtual environment of your
python&amp;nbsp;system.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;virutalenv path/to/the/directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To enable the virtual environment, you should just run following&amp;nbsp;command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; path/to/the/directory
&lt;span class="nb"&gt;source&lt;/span&gt; bin/activate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://ss64.com/bash/source.html"&gt;&lt;code&gt;source&lt;/code&gt;&lt;/a&gt; is &lt;a href="https://www.gnu.org/software/bash"&gt;bash&lt;/a&gt;&amp;#8216;s built-in command.
According to the document, that I linked, it does the&amp;nbsp;following.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Read and execute commands from the filename argument in the current shell&amp;nbsp;context.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, &lt;code&gt;source bin/activate&lt;/code&gt; command read the file, and alter the &lt;a href="https://www.gnu.org/software/bash"&gt;bash&lt;/a&gt;&amp;#8216;s
environment, and makes you can run executable in the virtual&amp;nbsp;environment.&lt;/p&gt;
&lt;p&gt;That&amp;#8217;s why deactivating this virtual environment is so&amp;nbsp;easy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;deactivate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Becuase this &lt;code&gt;deactivate&lt;/code&gt; is already in your &lt;code&gt;PATH&lt;/code&gt;, although it won&amp;#8217;t be after
running&amp;nbsp;this.&lt;/p&gt;
&lt;h4&gt;Pelican&lt;/h4&gt;
&lt;h5&gt;Install&amp;nbsp;Pelican&lt;/h5&gt;
&lt;p&gt;After I activated the virtual environment, I&amp;#8217;ve created a file called
&lt;code&gt;requirements.txt&lt;/code&gt;. It isn&amp;#8217;t necessarilly named like that, but it&amp;#8217;s on &lt;a href="https://pip.pypa.io"&gt;pip&lt;/a&gt;&amp;#8216;s
&lt;a href="https://pip.pypa.io/en/stable/user_guide/#requirements-files"&gt;document&lt;/a&gt;, and
commonly used for &lt;a href="https://pip.pypa.io"&gt;pip&lt;/a&gt;&amp;#8216;s dependency&amp;nbsp;list.&lt;/p&gt;
&lt;p&gt;This is the content of the file. This is simple file, and each line has each
&lt;a href="https://www.python.org"&gt;Python&lt;/a&gt; module&amp;nbsp;name.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pelican
markdown
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt; supports &lt;a href="http://docutils.sourceforge.net/rst.html"&gt;reStructedText&lt;/a&gt; by default, but it doesn&amp;#8217;t &lt;a href="https://daringfireball.net/projects/markdown"&gt;Markdown&lt;/a&gt;. I
personally prefer &lt;a href="https://daringfireball.net/projects/markdown"&gt;Markdown&lt;/a&gt; to &lt;a href="http://docutils.sourceforge.net/rst.html"&gt;reStructedText&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;Using&amp;nbsp;Pelican&lt;/h5&gt;
&lt;p&gt;The next things to do is starting your &lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt; instance. The developers of
&lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt; are kind enough to provide you a easy-bootstraping&amp;nbsp;command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pelican-quickstart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will create some directories and files, including &lt;code&gt;Makefile&lt;/code&gt;,
&lt;code&gt;develop_server.sh&lt;/code&gt;, &lt;code&gt;pelicanconf.py&lt;/code&gt;, &lt;code&gt;publishconf.py&lt;/code&gt;. With first two files,
you have a bit of automation for building your &lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt; site locally during
developing. With the other two files, you can configure your &lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt; site as
you&amp;nbsp;want.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;make devserver
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will turn on the watcher on &lt;code&gt;content&lt;/code&gt; directory, &lt;code&gt;themes&lt;/code&gt; directory, and
the configuration files including two that I mentioned above. Also, it turns on
the &lt;span class="caps"&gt;HTTP&lt;/span&gt; server which listens 8000 port by&amp;nbsp;default.&lt;/p&gt;
&lt;h5&gt;Choosing a&amp;nbsp;Theme&lt;/h5&gt;
&lt;p&gt;From &lt;a href="http://www.pelicanthemes.com"&gt;here&lt;/a&gt;, you can check various themes and its
screenshots. &lt;span class="caps"&gt;IIRC&lt;/span&gt;, all of them are hosted in &lt;a href="https://github.com"&gt;Github&lt;/a&gt;, and you can clone the
repository of the theme into your &lt;code&gt;themes&lt;/code&gt; directory. After set &lt;code&gt;THEME&lt;/code&gt; variable
to the path to the directory you&amp;#8217;ve cloned, then it&amp;#8217;s good to&amp;nbsp;go.&lt;/p&gt;
&lt;p&gt;There might be a few little changes necessary, like color, some configuration
variable, or even the layout of the&amp;nbsp;theme.&lt;/p&gt;
&lt;h3&gt;Continuous&amp;nbsp;Integration&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org"&gt;Travis &lt;span class="caps"&gt;CI&lt;/span&gt;&lt;/a&gt; is one of popular &lt;span class="caps"&gt;CI&lt;/span&gt; service. And it&amp;#8217;s well integrated with
&lt;a href="https://github.com"&gt;Github&lt;/a&gt;. You can register to &lt;a href="https://travis-ci.org"&gt;Travis &lt;span class="caps"&gt;CI&lt;/span&gt;&lt;/a&gt; with &lt;a href="https://github.com"&gt;Github&lt;/a&gt;&amp;nbsp;account.&lt;/p&gt;
&lt;p&gt;With &lt;a href="https://travis-ci.org"&gt;Travis &lt;span class="caps"&gt;CI&lt;/span&gt;&lt;/a&gt;, you can push your content and source into &lt;code&gt;master&lt;/code&gt; branch of
your &lt;a href="https://github.com"&gt;Github&lt;/a&gt;, and &lt;a href="https://travis-ci.org"&gt;Travis &lt;span class="caps"&gt;CI&lt;/span&gt;&lt;/a&gt; will do the left, including building the source
and push to &lt;code&gt;gh-pages&lt;/code&gt; branch.&lt;/p&gt;
&lt;h4&gt;Github&amp;nbsp;Repository&lt;/h4&gt;
&lt;p&gt;Here&amp;#8217;s a tip for the &lt;a href="https://github.com"&gt;Github&lt;/a&gt; repository you&amp;#8217;ll make. Don&amp;#8217;t use
&lt;code&gt;username.github.io&lt;/code&gt;. That repository is designed for using &lt;a href="https://github.com"&gt;Github&lt;/a&gt;&amp;#8216;s default
making web site system, so using &lt;code&gt;gh-pages&lt;/code&gt; is simply not possible with this&amp;nbsp;repository.&lt;/p&gt;
&lt;p&gt;Let&amp;#8217;s make a new repository. You don&amp;#8217;t need to add any additional file, because
we are not going to clone this repository. Rather, we&amp;#8217;ll set it to the remote
repository of the local&amp;nbsp;repository.&lt;/p&gt;
&lt;p&gt;If you haven&amp;#8217;t initialized your local repository, just do&amp;nbsp;this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; path/to/the/directory
git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then with this command, set the remote&amp;nbsp;repository.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git remote add origin url_of_the_github_repo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, you can push to the &lt;a href="https://github.com"&gt;Github&lt;/a&gt; repository, you&amp;#8217;ve&amp;nbsp;created.&lt;/p&gt;
&lt;h4&gt;Travis&lt;/h4&gt;
&lt;p&gt;Once you&amp;#8217;ve created &lt;a href="https://github.com"&gt;Github&lt;/a&gt;&amp;#8216;s public repository, you can find it in &lt;a href="https://travis-ci.org"&gt;Travis &lt;span class="caps"&gt;CI&lt;/span&gt;&lt;/a&gt;
dashboard. It&amp;#8217;s on &lt;code&gt;https://travis-ci.org/profile/{Github Username}&lt;/code&gt;. In this
page, you can activate the continuous integration by your &lt;a href="https://github.com"&gt;Github&lt;/a&gt;&amp;nbsp;repository.&lt;/p&gt;
&lt;p&gt;Now, you need to create &lt;code&gt;.travis.yml&lt;/code&gt; file in your&amp;nbsp;repository.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;language&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;python&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="nt"&gt;python&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;3.6&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="nt"&gt;branches&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;only&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;master&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="nt"&gt;install&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pip install -r requirements.txt&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;make publish&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="nt"&gt;deploy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pages&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;skip-cleanup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;github-token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;$GITHUB_TOKEN&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;keep-history&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;local-dir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;output&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;on&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;branch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;master&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is my configuration file. My configuration has mainly two part. The former
is to build the &lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt; site, and the latter is to push to &lt;code&gt;gh-pages&lt;/code&gt; of the
&lt;a href="https://github.com"&gt;Github&lt;/a&gt;&amp;nbsp;repository.&lt;/p&gt;
&lt;p&gt;Note that there is &lt;code&gt;$GITHUB_TOKEN&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Github&amp;nbsp;Token&lt;/h4&gt;
&lt;p&gt;My configuration of &lt;a href="https://travis-ci.org"&gt;Travis &lt;span class="caps"&gt;CI&lt;/span&gt;&lt;/a&gt; pushes to my repository. To make it possible,
we need to tell &lt;a href="https://github.com"&gt;Github&lt;/a&gt; to allow &lt;a href="https://travis-ci.org"&gt;Travis &lt;span class="caps"&gt;CI&lt;/span&gt;&lt;/a&gt; to do that. This is why the token
is&amp;nbsp;required.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/"&gt;Here&lt;/a&gt;&amp;#8216;s
how to create the token. When you create the token, don&amp;#8217;t forget to check
&lt;code&gt;public_repo&lt;/code&gt; scope. That&amp;#8217;s the scope that allows &lt;a href="https://travis-ci.org"&gt;Travis &lt;span class="caps"&gt;CI&lt;/span&gt;&lt;/a&gt; to push a new
commits to your &lt;a href="https://github.com"&gt;Github&lt;/a&gt;&amp;nbsp;repository.&lt;/p&gt;
&lt;p&gt;After you create the token, copy it and go to &lt;a href="https://travis-ci.org"&gt;Travis &lt;span class="caps"&gt;CI&lt;/span&gt;&lt;/a&gt;&amp;#8216;s repository settings
page. The url would be &lt;code&gt;https://travis-ci.org/{username}/{repo name}/settings&lt;/code&gt;.
In that page, you can configure the environment variables. Creat a new variable
with &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; for the name and the copied token for the&amp;nbsp;value.&lt;/p&gt;
&lt;p&gt;Now, if you push the &lt;code&gt;master&lt;/code&gt; branch, then &lt;a href="https://travis-ci.org"&gt;Travis &lt;span class="caps"&gt;CI&lt;/span&gt;&lt;/a&gt; will be noticed. Then,
it will build, make a new commit, and push to &lt;code&gt;gh-pages&lt;/code&gt; branch. It&amp;#8217;s the time
to check out &lt;code&gt;https://{username}.github.io/{repo name}&lt;/code&gt;&lt;/p&gt;</content><category term="Dev"></category><category term="github"></category><category term="travis"></category><category term="pelican"></category><category term="python"></category><category term="CI"></category></entry><entry><title>Best Practice to Check Table Information in MySQL</title><link href="https://soundlake.xyz/posts/2017/01/09/best-practice-to-check-table-information-in-mysql.html" rel="alternate"></link><published>2017-01-09T10:00:00+01:00</published><updated>2018-04-03T22:00:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.xyz,2017-01-09:/posts/2017/01/09/best-practice-to-check-table-information-in-mysql.html</id><summary type="html">&lt;p&gt;There&amp;#8217;s a better way to check the table schema in&amp;nbsp;MySQL.&lt;/p&gt;</summary><content type="html">&lt;p&gt;I usually use &lt;code&gt;DESC&lt;/code&gt; to check the columns of the table,
which is similar to &lt;code&gt;EXPLAIN&lt;/code&gt;.
But it&amp;#8217;s not enough espeicially when I want to check indexes with&amp;nbsp;columns.&lt;/p&gt;
&lt;p&gt;Recently, I got introduced of &lt;code&gt;SHOW CREATE TABLE&lt;/code&gt;.
It seems strange, but it shows the &lt;span class="caps"&gt;SQL&lt;/span&gt; for creating the table.
The result includes lot&amp;#8217;s of unnecessary lines, and you can clean them with &lt;code&gt;\G&lt;/code&gt; in the end.
So, if you want to check columns and indexes of the table, you can use the&amp;nbsp;following.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;SHOW&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TABLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;table&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;G&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Dev"></category><category term="MySQL"></category><category term="MariaDB"></category></entry><entry><title>Add Binary Path in PowerShell</title><link href="https://soundlake.xyz/posts/2016/12/28/add-binary-path-in-powershell.html" rel="alternate"></link><published>2016-12-28T10:00:00+01:00</published><updated>2018-04-03T21:00:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.xyz,2016-12-28:/posts/2016/12/28/add-binary-path-in-powershell.html</id><summary type="html">&lt;p&gt;Configure your &lt;span class="caps"&gt;PATH&lt;/span&gt; environment variable in&amp;nbsp;PowerShell&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently, I need to use &lt;code&gt;makecert&lt;/code&gt; command in PowerShell, but &lt;code&gt;makecert.exe&lt;/code&gt; wasn&amp;#8217;t
there by default. So, I installed a few things. But still it didn&amp;#8217;t work. I found
the executable file under &lt;code&gt;C:\Program Files (x86)\Windows Kits\10\bin\x64\&lt;/code&gt;, but the
command wasn&amp;#8217;t recognized. Apparently, just like bash or other linux shell, it needs
profile&amp;nbsp;file.&lt;/p&gt;
&lt;p&gt;The default path for the profile file is
&lt;code&gt;C:\Users\[username]\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1&lt;/code&gt;.
It is stored in &lt;code&gt;$profile&lt;/code&gt; variable. You can check its value by simply typing the
variable in&amp;nbsp;PowerShell.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$profile&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But the file does not exist by default. You can check if the file exists with
typing in the following&amp;nbsp;command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;test-path &lt;span class="nv"&gt;$profile&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There&amp;#8217;s no &lt;code&gt;touch&lt;/code&gt; command in PowerShell. Instead, there is &lt;code&gt;new-item&lt;/code&gt; command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;New-Item &lt;span class="nv"&gt;$profile&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, the directory does not exist either by default. You will see the
following error&amp;nbsp;message.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;New&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Could&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;part&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;path&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;C:\Users\[username]\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can easily create a directory with &lt;code&gt;mkdir&lt;/code&gt;. After creating the directory,
then try &lt;code&gt;New-Item&lt;/code&gt; command once again. Then, you have your own PowerShell
profile. In this file, you can add the following line, then restart the&amp;nbsp;PowerShell.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Add&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SYNOPSIS&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;Adds&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Directory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Current&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Path&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DESCRIPTION&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;Add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;current&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;useful&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;temporary&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;changes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;when&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;adjusting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;within&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;powershell&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;prompt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EXAMPLE&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;Add&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Directory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;C:\Program Files\Notepad++&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;PARAMETER&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Directory&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;current&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;CmdletBinding()&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Parameter(&lt;/span&gt;
&lt;span class="n"&gt;      Mandatory=$True,&lt;/span&gt;
&lt;span class="n"&gt;      ValueFromPipeline=$True,&lt;/span&gt;
&lt;span class="n"&gt;      ValueFromPipelineByPropertyName=$True,&lt;/span&gt;
&lt;span class="n"&gt;      HelpMessage=&amp;#39;What directory would you like to add?&amp;#39;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Alias(&amp;#39;dir&amp;#39;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string[&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]$&lt;/span&gt;&lt;span class="n"&gt;Directory&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;PROCESS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="k"&gt;Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="nl"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;PATH&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;foreach&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;Directory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="k"&gt;Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;contains&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;Write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Verbose&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;$dir is already present in PATH&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Test&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="k"&gt;Write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Verbose&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;$dir does not exist in the filesystem&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="k"&gt;Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="nl"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;PATH&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;]::&lt;/span&gt;&lt;span class="k"&gt;Join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="k"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;Add&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Directory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;C:\Program Files (x86)\Windows Kits\10\bin\x64\&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This code is create by &lt;a href="https://github.com/adrianhall"&gt;splunk&lt;/a&gt; and published in
&lt;a href="http://blogs.splunk.com/2013/07/29/powershell-profiles-and-add-path/"&gt;his&amp;nbsp;blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More information for PowerShell profile in
&lt;a href="https://technet.microsoft.com/en-us/library/2008.10.windowspowershell.aspx"&gt;MicroSoft Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;PS&lt;/span&gt;. In my environment, running cusgom script was disabled. I had to run the
following command to enable to run the&amp;nbsp;script.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Set-ExecutionPolicy remotesigned
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Dev"></category><category term="Windows"></category><category term="PowerShell"></category><category term="environment"></category></entry><entry><title>A Good Example of HTTP HEAD Method</title><link href="https://soundlake.xyz/posts/2016/12/23/a-good-example-of-http-head-method.html" rel="alternate"></link><published>2016-12-23T10:00:00+01:00</published><updated>2018-04-03T20:00:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.xyz,2016-12-23:/posts/2016/12/23/a-good-example-of-http-head-method.html</id><summary type="html">&lt;p&gt;&lt;span class="caps"&gt;HEAD&lt;/span&gt; method is not the most popular, but still it has a&amp;nbsp;role.&lt;/p&gt;</summary><content type="html">&lt;p&gt;I&amp;#8217;ve never been used &lt;code&gt;HEAD&lt;/code&gt; method in &lt;span class="caps"&gt;HTTP&lt;/span&gt;. I even don&amp;#8217;t know what
is in the &lt;span class="caps"&gt;HTTP&lt;/span&gt; method list. Usually I only use &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt;. I
rarely use &lt;code&gt;DELETE&lt;/code&gt; and &lt;code&gt;FETCH&lt;/code&gt;. But other than that I don&amp;#8217;t use&amp;nbsp;anything.&lt;/p&gt;
&lt;p&gt;But I had an issue. I got a RESTFul &lt;span class="caps"&gt;API&lt;/span&gt; for file storage. And at some
point I needed to check if the file exists. It&amp;#8217;s too much to &lt;code&gt;GET&lt;/code&gt; all
the payload of the file contents for checking if the file exists.
I was thinking if I should introduce the new &lt;span class="caps"&gt;API&lt;/span&gt;, but it&amp;#8217;s not&amp;nbsp;RESTFul.&lt;/p&gt;
&lt;p&gt;And here we are. We have &lt;code&gt;HEAD&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://www.w3.org"&gt;w3&lt;/a&gt; explains about &lt;code&gt;HEAD&lt;/code&gt; following;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;span class="caps"&gt;HEAD&lt;/span&gt; method is identical to &lt;span class="caps"&gt;GET&lt;/span&gt; except that the server &lt;span class="caps"&gt;MUST&lt;/span&gt; &lt;span class="caps"&gt;NOT&lt;/span&gt;
return a message-body in the response. The metainformation contained
in the &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers in response to a &lt;span class="caps"&gt;HEAD&lt;/span&gt; request &lt;span class="caps"&gt;SHOULD&lt;/span&gt; be identical
to the information sent in response to a &lt;span class="caps"&gt;GET&lt;/span&gt; request. This method can
be used for obtaining metainformation about the entity implied by the
request without transferring the entity-body itself. This method is
often used for testing hypertext links for validity, accessibility,
and recent&amp;nbsp;modification.&lt;/p&gt;
&lt;p&gt;The response to a &lt;span class="caps"&gt;HEAD&lt;/span&gt; request &lt;span class="caps"&gt;MAY&lt;/span&gt; be cacheable in the sense that the
information contained in the response &lt;span class="caps"&gt;MAY&lt;/span&gt; be used to update a previously
cached entity from that resource. If the new field values indicate that
the cached entity differs from the current entity (as would be indicated
by a change in Content-Length, Content-&lt;span class="caps"&gt;MD5&lt;/span&gt;, ETag or Last-Modified),
then the cache &lt;span class="caps"&gt;MUST&lt;/span&gt; treat the cache entry as&amp;nbsp;stale.&lt;/p&gt;
&lt;p&gt;from &lt;a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html"&gt;&lt;span class="caps"&gt;HTTP&lt;/span&gt;&amp;nbsp;methods&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now I can just get the header with &lt;code&gt;HEAD&lt;/code&gt; method and check if the file exists
without downloading all the&amp;nbsp;payload.&lt;/p&gt;</content><category term="Dev"></category><category term="http"></category><category term="restful"></category><category term="api"></category></entry><entry><title>Create dummy file in Linux</title><link href="https://soundlake.xyz/posts/2016/12/16/create-dummy-file-in-linux.html" rel="alternate"></link><published>2016-12-16T10:00:00+01:00</published><updated>2018-04-03T17:00:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.xyz,2016-12-16:/posts/2016/12/16/create-dummy-file-in-linux.html</id><summary type="html">&lt;p&gt;A few options to create a dummy file in&amp;nbsp;Linux&lt;/p&gt;</summary><content type="html">&lt;h3&gt;3 options to create a dummy&amp;nbsp;file&lt;/h3&gt;
&lt;p&gt;Sometimes a big size dummy file is necessary.
There are roughly 3 ways to achieve this: &lt;code&gt;dd&lt;/code&gt;, &lt;code&gt;truncate&lt;/code&gt;, &lt;code&gt;fallocate&lt;/code&gt;.
I found them from &lt;a href="http://stackoverflow.com/questions/257844/quickly-create-a-large-file-on-a-linux-system"&gt;this Stackoverflow answer&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;1. &lt;code&gt;dd&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;It&amp;#8217;s the most famous one, but it&amp;#8217;s basically for copy data from one to another
in hard way. It&amp;#8217;s accurate but slow. If you want just a dummy file, it&amp;#8217;s not a
good&amp;nbsp;choice.&lt;/p&gt;
&lt;h4&gt;2. &lt;code&gt;truncate&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;It&amp;#8217;s maybe the fasted way. But it doesn&amp;#8217;t actually allocate the space. What it
does is cheat the file system with repetition of smaller amount of data. If you
really want to &lt;em&gt;allocate&lt;/em&gt; the space, it&amp;#8217;s not the best&amp;nbsp;one.&lt;/p&gt;
&lt;h4&gt;3. &lt;code&gt;fallocate&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Now, it&amp;#8217;s the last and &lt;strong&gt;the best&lt;/strong&gt;&amp;nbsp;option.&lt;/p&gt;
&lt;h3&gt;More about &lt;code&gt;fallocate&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The basic usage&amp;nbsp;is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;fallocate -l &lt;span class="o"&gt;[&lt;/span&gt;length&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;filename&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Dev"></category><category term="linux"></category><category term="dummy"></category><category term="command"></category><category term="CLI"></category></entry><entry><title>Pelican Tips</title><link href="https://soundlake.xyz/posts/2014/12/21/pelican-tips.html" rel="alternate"></link><published>2014-12-21T10:00:00+01:00</published><updated>2018-04-08T02:00:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.xyz,2014-12-21:/posts/2014/12/21/pelican-tips.html</id><summary type="html">&lt;h3&gt;&lt;a href="https://github.com/davisp/ghp-import"&gt;ghp-import&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This is a essential tool for using GitHub Page as Pelican blog.
With this tool, I don&amp;#8217;t need to manage two repo;
one for generator, and the other for output, the actual blog.
Because this does all the messy things.
You just need to &lt;code&gt;make github&lt;/code&gt; and that …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;&lt;a href="https://github.com/davisp/ghp-import"&gt;ghp-import&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This is a essential tool for using GitHub Page as Pelican blog.
With this tool, I don&amp;#8217;t need to manage two repo;
one for generator, and the other for output, the actual blog.
Because this does all the messy things.
You just need to &lt;code&gt;make github&lt;/code&gt; and that&amp;#8217;s&amp;nbsp;all.&lt;/p&gt;
&lt;p&gt;It took a lot of time to find how to manage Pelican blog with Github,
and the answer was on the right by me.
Let&amp;#8217;s read the document carefully, and don&amp;#8217;t waste&amp;nbsp;time.&lt;/p&gt;
&lt;h3&gt;Supported Syntax Highlight&amp;nbsp;List&lt;/h3&gt;
&lt;p&gt;There is syntax highlighter for python.
Praise &lt;a href="https://www.python.org"&gt;Python&lt;/a&gt;!
&lt;a href="http://pygments.org"&gt;Pygmets&lt;/a&gt;, It is called.
And this is the &lt;a href="http://pygments.org/docs/lexers"&gt;link&lt;/a&gt; for the list of supported&amp;nbsp;Sytanx&lt;/p&gt;
&lt;h3&gt;Vim-Jinja2&lt;/h3&gt;
&lt;p&gt;In order to develop/customize theme of &lt;a href="http://blog.getpelican.com"&gt;Pelican&lt;/a&gt;,
&lt;a href="http://jinja.pocoo.org"&gt;Jinja2&lt;/a&gt;, I need.
For using &lt;span class="caps"&gt;VIM&lt;/span&gt;, I found &lt;a href="https://github.com/Glench/Vim-Jinja2-Syntax"&gt;Vim-Jinja2-Syntax&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Install&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~./vim_runtime/source_not_forked
git clone https://github.com/Glench/Vim-Jinja2-Syntax
git add Vim-Jinja2-Syntax
git commit -m &lt;span class="s2"&gt;&amp;quot;add jinja plugin&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;How to&amp;nbsp;Use&lt;/h4&gt;
&lt;p&gt;Jinja2 is &lt;span class="caps"&gt;HTML&lt;/span&gt; template, so usually its extension is &lt;code&gt;*.html&lt;/code&gt;.
Thus, &lt;span class="caps"&gt;VIM&lt;/span&gt; usually recognize it as &lt;span class="caps"&gt;HTML&lt;/span&gt; file.
So, I have to set filetype to &lt;code&gt;jinja&lt;/code&gt; to use this&amp;nbsp;plugin.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="k"&gt;filetype&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;jinja
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Dev"></category><category term="pelican"></category><category term="python"></category><category term="vim"></category></entry><entry><title>Travis 체험하기</title><link href="https://soundlake.xyz/posts/2014/12/20/ko/hello-travis.html" rel="alternate"></link><published>2014-12-20T10:00:00+01:00</published><updated>2018-04-08T02:00:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.xyz,2014-12-20:/posts/2014/12/20/ko/hello-travis.html</id><summary type="html">&lt;p&gt;&lt;a href="https://travis-ci.org"&gt;Travis&lt;/a&gt;에 대해선 오래전부터 들어왔다.
뭔가를 자동화하는 도구라고 하는데,
딱히 사용해볼 기회가 없었다.
그런데 &lt;a href="http://blog.getpelican.com"&gt;Pelican&lt;/a&gt;으로 블로그 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://travis-ci.org"&gt;Travis&lt;/a&gt;에 대해선 오래전부터 들어왔다.
뭔가를 자동화하는 도구라고 하는데,
딱히 사용해볼 기회가 없었다.
그런데 &lt;a href="http://blog.getpelican.com"&gt;Pelican&lt;/a&gt;으로 블로그를 시작하고 보니,
글을 포스팅하는 게 꽤 귀찮은 일이 되었다.
왜냐하면 보통은 웹사이트로 들어가 글을 쓰기만 하면 되는데,
이건 글을 쓴 다음, 글 저장소에 &lt;code&gt;push&lt;/code&gt;를 하고,
커맨드라인에서 &lt;code&gt;make github&lt;/code&gt; 명령을 또 해주어야 한다.
원래는 한 단계면 될 것을 이젠 두 단계를 거쳐야 하는&amp;nbsp;거다.&lt;/p&gt;
&lt;p&gt;그러다가 &lt;a href="http://blog.mathieu-leplatre.info/publish-your-pelican-blog-on-github-pages-via-travis-ci.html"&gt;이 글&lt;/a&gt;을 읽게 되었다. 이런 좋은&amp;nbsp;기회가.&lt;/p&gt;
&lt;h4&gt;삽질&lt;/h4&gt;
&lt;p&gt;일단 맥북에서 Travis를 설치하자&amp;#8230;고 하는데, &lt;code&gt;gem install travis&lt;/code&gt;부터 막힌다.
아, 이럴 땐, &lt;a href="http://brew.sh"&gt;Homebrew&lt;/a&gt;로 &lt;a href="https://www.ruby-lang.org/"&gt;Ruby&lt;/a&gt;를 다시 빌드 하란다.
그러려면 &lt;a href="https://github.com/sstephenson/ruby-build"&gt;Ruby를 빌드할 도구&lt;/a&gt;가&amp;nbsp;필요하다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew install ruby-build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;도구가 설치되었으면 본격적으로 루비를&amp;nbsp;설치해볼까.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;CONFIGURE_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--with-openssl-dir=brew --prefix openssl&amp;quot;&lt;/span&gt; rbenv-install &lt;span class="m"&gt;2&lt;/span&gt;.1.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;그러나 또 에러 메세지가&amp;#8230;&amp;nbsp;-_-&lt;/p&gt;
&lt;p&gt;뭔가 &lt;a href="https://github.com/sstephenson/ruby-build/issues/602"&gt;이슈 스레드&lt;/a&gt;는 있지만,
답은 없는&amp;nbsp;분위기.&lt;/p&gt;
&lt;p&gt;에라 모르겠다 하고 &lt;a href="https://travis-ci.org"&gt;Travis&lt;/a&gt;를 곧장 찾았다.
그런데 홈페이지에서 다 된다. -_-&amp;#8230;&amp;nbsp;에효.&lt;/p&gt;
&lt;p&gt;아무튼 이 포스팅이 Travis를 이용한 첫 포스팅이 될&amp;nbsp;지도.&lt;/p&gt;
&lt;h5&gt;추가1.&amp;nbsp;2014.12.20.&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;1차 빌드에서는 markdown package가 없어서&amp;nbsp;실패.&lt;/li&gt;
&lt;li&gt;2차 빌드에서는 git 프로토콜을 사용할 수 없대서 실패.
그래도 원본 글에 아직 방법이 남았으니. 사용해&amp;nbsp;봐야지.&lt;/li&gt;
&lt;/ol&gt;
&lt;h5&gt;추가2.&amp;nbsp;2014.12.21.&lt;/h5&gt;
&lt;p&gt;4차 빌드도 실패. 알고 봤더니, Travis를 로컬에 저장한 다음,
GitHub에서 토큰을 생성하고, 암호화시키는 과정을&amp;nbsp;해야했다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;CONFIGURE_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--with-openssl-dir=brew --prefix openssl&amp;quot;&lt;/span&gt; rbenv-install &lt;span class="m"&gt;2&lt;/span&gt;.1.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;에서 나온 &lt;code&gt;rbenv-hooks: command not found&lt;/code&gt; 에러 메세지로 찾으니
&lt;a href="https://github.com/sstephenson/rbenv"&gt;rbenv 깃헙 저장소&lt;/a&gt;가 나왔다.
README에 &lt;a href="https://github.com/sstephenson/rbenv#homebrew-on-mac-os-x"&gt;homebrew를 이용해 설치하는 법&lt;/a&gt;,
&lt;a href="https://github.com/sstephenson/rbenv#how-rbenv-hooks-into-your-shell"&gt;rbenv-hooks를 설치하는 법&lt;/a&gt;이
매우 잘 설명되어 있었다. (역시 README를 잘 읽어야&amp;nbsp;한다.)&lt;/p&gt;
&lt;p&gt;그러나. 아직 빌드 실패. &lt;code&gt;expected an absolute directory name for --prefix: openssl&lt;/code&gt;라는 에러메세지.
아까 homebrew가 빌드 하는 로그를 제대로 안 봤는데, 다시 보니,
이미 osx에 openssl이 설치되어 있어서, key만 있단다. &lt;code&gt;/usr/local/bin&lt;/code&gt;으로 링크조차 되지 않았다는 거다.
난 &lt;code&gt;--prefix&lt;/code&gt;가 뭔지 모르는데; 일단, homebrew에 설치된 openssl의 절대경로를 주고는&amp;nbsp;재도전.&lt;/p&gt;
&lt;h5&gt;추가3.&amp;nbsp;2014.12.22.&lt;/h5&gt;
&lt;p&gt;결국 포기. -_-&amp;#8230;. 이게 안 되면 앞으로도 쭉 안 된다는 건데.
어마무지 귀찮구만. 지금으로서의 문제는 ruby-openssl 설치 불가능.
대안은 크게&amp;nbsp;두가지.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;가상환경을&amp;nbsp;구성한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.docker.com"&gt;Docker&lt;/a&gt;에서 가상환경&amp;nbsp;돌리기&lt;/li&gt;
&lt;li&gt;이참에 &lt;a href="https://github.com/coreos/rocket"&gt;Rocket&lt;/a&gt;&amp;nbsp;맛보기&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다른 &lt;span class="caps"&gt;CI&lt;/span&gt;(Continuous Integration)을&amp;nbsp;활용한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;다른&amp;nbsp;문서들&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;&lt;a href="http://docs.python-guide.org/en/latest/scenarios/ci"&gt;Continuous Integration&lt;/a&gt;&amp;#8221; in &lt;a href="http://docs/python-guide.org"&gt;Python&amp;nbsp;Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;&lt;a href="http://www.fullstackpython.com/continuous-integration.html"&gt;Continuous Integration&lt;/a&gt;&amp;#8221; in &lt;a href="http://www.fullstackpython.com"&gt;Full Stack&amp;nbsp;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;손 뻗치면 닿을&amp;nbsp;대안들&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jenkins-ci.org"&gt;Jenkins &lt;span class="caps"&gt;CI&lt;/span&gt;&lt;/a&gt; in&amp;nbsp;Java&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.buildbot.net/current"&gt;Buildbot&lt;/a&gt; in&amp;nbsp;Python&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mulesoft.org/documentation/display/current/Mule+Fundamentals"&gt;Mule&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.go.cd"&gt;Go &lt;span class="caps"&gt;CD&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Strider-CD/strider"&gt;Strider &lt;span class="caps"&gt;CD&lt;/span&gt;&lt;/a&gt; in&amp;nbsp;Node&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Dev"></category><category term="automation"></category><category term="travis"></category><category term="ruby"></category><category term="pelican"></category></entry><entry><title>Stylus를 씁시다.</title><link href="https://soundlake.xyz/posts/2014/12/18/ko/lets-use-stylus.html" rel="alternate"></link><published>2014-12-18T10:00:00+01:00</published><updated>2018-04-08T02:00:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.xyz,2014-12-18:/posts/2014/12/18/ko/lets-use-stylus.html</id><summary type="html">&lt;p&gt;&lt;span class="caps"&gt;CSS&lt;/span&gt; preprocessor들을 찾아보다가, 충동적으로 Stylus로 가기로 했다.
이게 다 &lt;a href="http://webdesign.tutsplus.com/articles/why-i-choose-stylus-and-you-should-too--webdesign-18412"&gt;이 블로그&lt;/a&gt; 때문이다.
글이 무척이나&amp;nbsp;유혹적이었다.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://learnboost.github.io/stylus"&gt;Stylus 공식&amp;nbsp;홈페이 …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;span class="caps"&gt;CSS&lt;/span&gt; preprocessor들을 찾아보다가, 충동적으로 Stylus로 가기로 했다.
이게 다 &lt;a href="http://webdesign.tutsplus.com/articles/why-i-choose-stylus-and-you-should-too--webdesign-18412"&gt;이 블로그&lt;/a&gt; 때문이다.
글이 무척이나&amp;nbsp;유혹적이었다.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://learnboost.github.io/stylus"&gt;Stylus 공식&amp;nbsp;홈페이지&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/learnboost/stylus"&gt;Stylus Github&amp;nbsp;repo&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;1. Stylus&amp;nbsp;설치&lt;/h3&gt;
&lt;p&gt;이건 쉽다. 이미 나는 &lt;a href="http://nodejs.org"&gt;node.js&lt;/a&gt;가 설치되어&amp;nbsp;있으니&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;npm install -g stylus
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;이걸로&amp;nbsp;끝.&lt;/p&gt;
&lt;h3&gt;2. vim-stylus.vim&amp;nbsp;설치&lt;/h3&gt;
&lt;p&gt;문제는 내가 &lt;a href="http://www.vim.org"&gt;&lt;span class="caps"&gt;VIM&lt;/span&gt;&lt;/a&gt;에다가
이미 &lt;a href="https://github.com/amix/vimrc"&gt;일종의 플러그인 모음집&lt;/a&gt;을 덧붙여 사용하고 있다는 건데,
이게 폴더 구성이 좀 복잡해서 새 플러그인 설치할 때마다 까먹고는 다시 찾아봐야 한다는 문제가 있다.;;&amp;nbsp;암튼,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/.vim_runtime/source_not_forked
git clone git://github.com/wavded/vim-stylus.git
git add vim-stylus
git commit -m &lt;span class="s2"&gt;&amp;quot;add vim-stylus plugin&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;이렇게 하면 구성 끝. VIM에서도 Stylus를&amp;nbsp;쉽게.&lt;/p&gt;</content><category term="Dev"></category><category term="css"></category><category term="web"></category><category term="vim"></category><category term="git"></category><category term="npm"></category></entry><entry><title>MacVim 전체화면 깨짐 해결</title><link href="https://soundlake.xyz/posts/2014/12/18/ko/macvim-fullscreen.html" rel="alternate"></link><published>2014-12-18T10:00:00+01:00</published><updated>2018-04-08T02:00:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.xyz,2014-12-18:/posts/2014/12/18/ko/macvim-fullscreen.html</id><summary type="html">&lt;p&gt;Mac 업데이트 후, MacVim 전체화면을 실행하면 화면 오른쪽에 밝은 색의 막대가&amp;nbsp;생겨났다.&lt;/p&gt;
&lt;p&gt;&lt;img alt="밝은 색 막대가 생긴 MacVim 전체화면모드" src="https://soundlake.xyz/images/20141218_screen.png"&gt;&lt;/p&gt;
&lt;p&gt;한동안 좀 짜증이 났지만 그래도 견딜만 해 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Mac 업데이트 후, MacVim 전체화면을 실행하면 화면 오른쪽에 밝은 색의 막대가&amp;nbsp;생겨났다.&lt;/p&gt;
&lt;p&gt;&lt;img alt="밝은 색 막대가 생긴 MacVim 전체화면모드" src="https://soundlake.xyz/images/20141218_screen.png"&gt;&lt;/p&gt;
&lt;p&gt;한동안 좀 짜증이 났지만 그래도 견딜만 해서 참았다가, 오늘 생각난 김에 이것도 해결. 멕북은 화면 베젤이 까만 색이니 화면이 어두운데 거기 한 부분만 밝으니 여간 신경쓰이는 게&amp;nbsp;아니었다.&lt;/p&gt;
&lt;p&gt;한참 찾다가 결국 &lt;a href="https://code.google.com/p/macvim/issues/detail?id=454"&gt;두둥!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;결국 해결 방법은,
    1. 설정창을 열자. MacVim -&amp;gt; Preference..(Cmd+,)
    2. Advanced 탭으로.
    3. Prefer native fullscreen mode.. 를 비 활성화.
    4. Full screen mode 풀었다가 다시 돌아오면,
    5. 짜잔.&amp;nbsp;해결.&lt;/p&gt;</content><category term="Dev"></category><category term="vim"></category><category term="MacVim"></category><category term="Mac"></category></entry><entry><title>VIM에서 한글 사용하기</title><link href="https://soundlake.xyz/posts/2014/12/18/ko/using-hangul-in-vim.html" rel="alternate"></link><published>2014-12-18T10:00:00+01:00</published><updated>2018-04-08T02:00:00+02:00</updated><author><name>soundlake</name></author><id>tag:soundlake.xyz,2014-12-18:/posts/2014/12/18/ko/using-hangul-in-vim.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.vim.org"&gt;&lt;span class="caps"&gt;VIM&lt;/span&gt;&lt;/a&gt;의 위대함을 설파하는 건 이미 많은 사람이 했고.
문제는 한글을 사용하기가 좀 불편하다는 거다.
물론 에디터 자체는 유니코 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://www.vim.org"&gt;&lt;span class="caps"&gt;VIM&lt;/span&gt;&lt;/a&gt;의 위대함을 설파하는 건 이미 많은 사람이 했고.
문제는 한글을 사용하기가 좀 불편하다는 거다.
물론 에디터 자체는 유니코드를 지원하니 한글을 사용할 수 있지만,
문제는 normal mode에서 명령어 입력을 해야 하는데,
insert mode와 normal mode를 움직일 때마다 한영 변경을 해줘야 하니,
한영 변경을 Cmd+Space로 하는 맥유저로서는 깝깝한&amp;nbsp;일이다.&lt;/p&gt;
&lt;p&gt;역시 해법은 있었다. &lt;a href="http://www.myip.co.kr/mbbs/tip/139818"&gt;원문참조&lt;/a&gt;
모두 세 가지 방법이 있었고, 역시 마지막 방법이 제일 좋은 듯&amp;nbsp;하다.&lt;/p&gt;
&lt;h4&gt;1. map을 이용해 ㅓ를 j에 매핑시키는&amp;nbsp;방식이다.&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;가장 기초적인&amp;nbsp;방법&lt;/li&gt;
&lt;li&gt;두벌식에서 세벌식 갈아타면, 다 바꿔야 한다.&amp;nbsp;-_-..&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;2. inoremap을 이용해 insert mode에서 normal mode로 바뀔 때, 자동으로 영문으로 쓰게 하는&amp;nbsp;거다.&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;inoremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;ESC&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;ESC&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;:&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;iminsert&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;환경에 따라 동작하지 않을 수도&amp;nbsp;있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;3. normal mode에서 환경 input method를 무시하고 키값을 입력받는&amp;nbsp;거다.&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;inoremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;ESC&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;ESC&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;:&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;imdisable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nb"&gt;nnoremap&lt;/span&gt; &lt;span class="k"&gt;i&lt;/span&gt; :&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;noimd&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;i&lt;/span&gt;
&lt;span class="nb"&gt;nnoremap&lt;/span&gt; I :&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;noimd&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I
&lt;span class="nb"&gt;nnoremap&lt;/span&gt; &lt;span class="k"&gt;a&lt;/span&gt; :&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;noimd&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;a&lt;/span&gt;
&lt;span class="nb"&gt;nnoremap&lt;/span&gt; A :&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;noimd&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;A
&lt;span class="nb"&gt;nnoremap&lt;/span&gt; &lt;span class="k"&gt;o&lt;/span&gt; :&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;noimd&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;o&lt;/span&gt;
&lt;span class="nb"&gt;nnoremap&lt;/span&gt; O :&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;noimd&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;O
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;환경 불문하고 잘 되는&amp;nbsp;방법.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;수정. 2014-12-21
뭔가 이상하게 작동했다. 설정을 하고 나서, &lt;code&gt;input mode&lt;/code&gt;에서 &lt;code&gt;normal mode&lt;/code&gt;로 나오면,
분명히 잘 작동하는데, 문제는 &lt;code&gt;normal mode&lt;/code&gt;에서 &lt;code&gt;input mode&lt;/code&gt;로 들어갈 때였다.
원래대로라면 분명히 &lt;code&gt;input mode&lt;/code&gt;에서의 &lt;span class="caps"&gt;IM&lt;/span&gt; 상태를 저장해놓았다가,
&lt;code&gt;normal mode&lt;/code&gt;에서 &lt;code&gt;input mode&lt;/code&gt;로 들어가면 저장된 상태가 나와야 하는데,
이건 들어갈 때마다 한글 키가 작동되는 거다.
물론 블로그 쓸 때처럼 한글을 많이 쓸 때도 있지만,
코딩을 할 때는 한글보다는 영문을 많이 쓸테니,
이것도 불편한 노릇이었다. 그래서 다시 찾아보니,
&lt;a href="http://vim.1045645.n5.nabble.com/Macvim-doesn-t-work-properly-with-chinese-input-method-td4340958.html"&gt;어느 중국인도 불편함을 토로하고 있더라&lt;/a&gt;. &lt;a href="http://seorenn.blogspot.be/2011/04/vim-vim-esc.html"&gt;어느 한국인도 찾아놓았더라&lt;/a&gt;.
사실 멋진 건, MacVim 개발자들이 이미 다 구현해놓았다는 것. 위에서처럽 복잡한 설정&amp;nbsp;없이,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;noimd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;이거 하나로 해결.&amp;nbsp;-_-.&lt;/p&gt;
&lt;p&gt;요즘 새삼 느끼는 거지만, 등잔 밑이 어둡다. 파랑새는 우리집에&amp;nbsp;있었다.&lt;/p&gt;</content><category term="Dev"></category><category term="vim"></category><category term="vimrc"></category></entry></feed>